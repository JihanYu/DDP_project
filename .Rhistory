qnorm(0.025)
qnorm(0.025, lower.tail=FALSE)
qnorm(0.2)
qnorm(0.2, lower.tail=FALSE)
rm(list=ls())
library(ggplot2)
a <- 0.05;  b <- 0.2
effect.size <- 5
mu0 <- 0;  std.drv0 <- 1
mu1 <- mu0 + effect.size;  std.drv1 <- 1
one.two <- TRUE
n1 <- 30;  n1.n0 <- 1;
two.sided <- 1;  if(one.two == TRUE) two.sided <- 2
za <- qnorm(a/two.sided, lower.tail=FALSE)
zb <- qnorm(b, lower.tail=FALSE)
za
zb
q12 <- NULL
if(n1.n0 < 1){
q12 <- 1 + 1/n1.n0
} else {
q12 <- 1 + n1.n0
}
q12
if(is.na(n1)){
n1 <- ( (za + zb)^2 * std.drv0 * (q12)^2 ) / (effect.size^2)
}
n0 <- n1/n1.n0
n1
is.na(n1)
( (za + zb)^2 * std.drv0 * (q12)^2 ) / (effect.size^2)
za
zb
std.drv0
q12
effect.size
n1.n0
rm(list=ls())
a <- 0.05;  b <- 0.2
effect.size <- 5
mu0 <- 0;  std.drv0 <- 1
mu1 <- mu0 + effect.size;  std.drv1 <- 1
one.two <- TRUE
n1 <- 30;  n1.n0 <- 1;
two.sided <- 1;  if(one.two == TRUE) two.sided <- 2
za <- qnorm(a/two.sided, lower.tail=FALSE)
zb <- qnorm(b, lower.tail=FALSE)
q12 <- NULL
if(n1.n0 < 1){
q12 <- 1 + 1/n1.n0
} else {
q12 <- 1 + n1.n0
}
q12
( (za + zb)^2 * std.drv0 * (q12)^2 ) / (effect.size^2)
std.drv0
za + zb
library(ggplot2)
a <- 0.05;  b <- 0.2
effect.size <- 0.5
mu0 <- 0;  std.drv0 <- 1
mu1 <- mu0 + effect.size;  std.drv1 <- 1
one.two <- TRUE
n1 <- 30;  n1.n0 <- 1;
two.sided <- 1;  if(one.two == TRUE) two.sided <- 2
za <- qnorm(a/two.sided, lower.tail=FALSE)
zb <- qnorm(b, lower.tail=FALSE)
q12 <- NULL
if(n1.n0 < 1){
q12 <- 1 + 1/n1.n0
} else {
q12 <- 1 + n1.n0
}
if(is.na(n1)){
n1 <- ( (za + zb)^2 * std.drv0 * (q12)^2 ) / (effect.size^2)
}
n0 <- n1/n1.n0
std.err0 <- std.drv0 / sqrt(n0/2)
std.err1 <- std.drv1 / sqrt(n1/2)
x <- seq(from = mu0 - 5*std.err0, to = mu1 + 5*std.err1, by=0.01)
h0 <- dnorm(x, mean=mu0, sd=std.err0)
h1 <- dnorm(x, mean=mu1, sd=std.err1)
h.norm <- data.frame(x, h0, h1)
a.h0 <- qnorm(a/two.sided, mean=mu0, sd=std.err0, lower.tail=FALSE)
b.h1 <- qnorm(b, mean=mu1, sd=std.error1)
p <- ggplot(h.norm, aes(x=x, y=h0)) +
geom_line(aes(x=x, y=h0), color="red") +
geom_line(aes(x=x, y=h1), color="blue") +
geom_vline(xintercept=a.h0) +
geom_vline(xintercept=b.h1) +
geom_ribbon(data=subset(h.norm, a.h0 <= x & x <= max(x)),
aes(ymin=0, ymax=h0, fill="H0", alpha=0.5)) +
geom_ribbon(data=subset(h.norm, min(x) <= x & x <= a.h0),
aes(ymin=0, ymax=h1, fill="H1", alpha=0.5))
print(p)
b.h1 <- qnorm(b, mean=mu1, sd=std.err1)
p <- ggplot(h.norm, aes(x=x, y=h0)) +
geom_line(aes(x=x, y=h0), color="red") +
geom_line(aes(x=x, y=h1), color="blue") +
geom_vline(xintercept=a.h0) +
geom_vline(xintercept=b.h1) +
geom_ribbon(data=subset(h.norm, a.h0 <= x & x <= max(x)),
aes(ymin=0, ymax=h0, fill="H0", alpha=0.5)) +
geom_ribbon(data=subset(h.norm, min(x) <= x & x <= a.h0),
aes(ymin=0, ymax=h1, fill="H1", alpha=0.5))
print(p)
( (za + zb)^2 * std.drv0 * (q12)^2 ) / (effect.size^2)
power.b <- pnorm(qnorm(0.05), mean=mu1, sd=std.err1, lower.tail=FALSE)
if (power.b >= (1-b)){
cat("Power :", power.b, "- adequate")
} else{
cat("Power :", power.b, "- inadequate")
}
b
std.err0
std.drv0
std.drv1
n0
n1
power.b
qnorm(0.05)
qnorm(0.05, lower.tail=FALSE)
a
two.sided
qnorm(a/two.sided, lower.tail=FALSE)
pnorm(qnorm(a/two.sided, lower.tail=FALSE), mean=mu1, sd=std.err1, lower.tail=FALSE)
mu1
std.err1
power.b <- pnorm(qnorm(a/two.sided, lower.tail=FALSE), mean=mu1, sd=std.err1, lower.tail=FALSE)
if (power.b >= (1-b)){
cat("Power :", power.b, "- adequate")
} else{
cat("Power :", power.b, "- inadequate")
}
cat("abc")
cat("abc\n")
if (power.b >= (1-b)){
cat("Power :", power.b, "- adequate\n")
} else{
cat("Power :", power.b, "- inadequate\n")
}
b
a <- 0.05;  b <- 0.2
effect.size <- 5
mu0 <- 0;  std.drv0 <- 1
mu1 <- mu0 + effect.size;  std.drv1 <- 1
one.two <- TRUE
n1 <- 130;  n1.n0 <- 1;
two.sided <- 1;  if(one.two == TRUE) two.sided <- 2
za <- qnorm(a/two.sided, lower.tail=FALSE)
zb <- qnorm(b, lower.tail=FALSE)
q12 <- NULL
if(n1.n0 >= 1){
q12 <- 1 + 1/n1.n0
} else {
q12 <- 1 + n1.n0
}
if(is.na(n1)){
n1 <- ( (za + zb)^2 * std.drv0^2 * (q12)^2 ) / (effect.size^2)
}
n0 <- n1/n1.n0
std.err0 <- std.drv0 / sqrt(n0/2)
std.err1 <- std.drv1 / sqrt(n1/2)
x <- seq(from = mu0 - 5*std.err0, to = mu1 + 5*std.err1, by=0.01)
h0 <- dnorm(x, mean=mu0, sd=std.err0)
h1 <- dnorm(x, mean=mu1, sd=std.err1)
h.norm <- data.frame(x, h0, h1)
a.h0 <- qnorm(a/two.sided, mean=mu0, sd=std.err0, lower.tail=FALSE)
b.h1 <- qnorm(b, mean=mu1, sd=std.err1)
p <- ggplot(h.norm, aes(x=x, y=h0)) +
geom_line(aes(x=x, y=h0), color="red") +
geom_line(aes(x=x, y=h1), color="blue") +
geom_vline(xintercept=a.h0) +
geom_vline(xintercept=b.h1) +
geom_ribbon(data=subset(h.norm, a.h0 <= x & x <= max(x)),
aes(ymin=0, ymax=h0, fill="H0", alpha=0.5)) +
geom_ribbon(data=subset(h.norm, min(x) <= x & x <= a.h0),
aes(ymin=0, ymax=h1, fill="H1", alpha=0.5))
print(p)
power.b <- pnorm(qnorm(a/two.sided, lower.tail=FALSE), mean=mu1, sd=std.err1, lower.tail=FALSE)
if (power.b >= (1-b)){
cat("Power :", power.b, "- adequate\n")
} else{
cat("Power :", power.b, "- inadequate\n")
}
a <- 0.05;  b <- 0.2
effect.size <- 0.5
mu0 <- 0;  std.drv0 <- 1
mu1 <- mu0 + effect.size;  std.drv1 <- 1
one.two <- TRUE
n1 <- 130;  n1.n0 <- 1;
two.sided <- 1;  if(one.two == TRUE) two.sided <- 2
za <- qnorm(a/two.sided, lower.tail=FALSE)
zb <- qnorm(b, lower.tail=FALSE)
q12 <- NULL
if(n1.n0 >= 1){
q12 <- 1 + 1/n1.n0
} else {
q12 <- 1 + n1.n0
}
if(is.na(n1)){
n1 <- ( (za + zb)^2 * std.drv0^2 * (q12)^2 ) / (effect.size^2)
}
n0 <- n1/n1.n0
std.err0 <- std.drv0 / sqrt(n0/2)
std.err1 <- std.drv1 / sqrt(n1/2)
x <- seq(from = mu0 - 5*std.err0, to = mu1 + 5*std.err1, by=0.01)
h0 <- dnorm(x, mean=mu0, sd=std.err0)
h1 <- dnorm(x, mean=mu1, sd=std.err1)
h.norm <- data.frame(x, h0, h1)
a.h0 <- qnorm(a/two.sided, mean=mu0, sd=std.err0, lower.tail=FALSE)
b.h1 <- qnorm(b, mean=mu1, sd=std.err1)
p <- ggplot(h.norm, aes(x=x, y=h0)) +
geom_line(aes(x=x, y=h0), color="red") +
geom_line(aes(x=x, y=h1), color="blue") +
geom_vline(xintercept=a.h0) +
geom_vline(xintercept=b.h1) +
geom_ribbon(data=subset(h.norm, a.h0 <= x & x <= max(x)),
aes(ymin=0, ymax=h0, fill="H0", alpha=0.5)) +
geom_ribbon(data=subset(h.norm, min(x) <= x & x <= a.h0),
aes(ymin=0, ymax=h1, fill="H1", alpha=0.5))
print(p)
power.b <- pnorm(qnorm(a/two.sided, lower.tail=FALSE), mean=mu1, sd=std.err1, lower.tail=FALSE)
if (power.b >= (1-b)){
cat("Power :", power.b, "- adequate\n")
} else{
cat("Power :", power.b, "- inadequate\n")
}
mu1
std.err1
workingpath <- "C:\\Users\\MED1\\Desktop\\Coursera\\project"
setwd(workingpath)
library(ggplot2)
a <- 0.05;  b <- 0.2
effect.size <- 0.5
mu0 <- 0;  std.drv0 <- 1
mu1 <- mu0 + effect.size;  std.drv1 <- 1
one.two <- TRUE
n1 <- 130;  n1.n0 <- 1;
two.sided <- 1;  if(one.two == TRUE) two.sided <- 2
za <- qnorm(a/two.sided, lower.tail=FALSE)
zb <- qnorm(b, lower.tail=FALSE)
q12 <- NULL
if(n1.n0 >= 1){
q12 <- 1 + 1/n1.n0
} else {
q12 <- 1 + n1.n0
}
if(is.na(n1)){
n1 <- ( (za + zb)^2 * std.drv0^2 * (q12)^2 ) / (effect.size^2)
}
n0 <- n1/n1.n0
std.err0 <- std.drv0 / sqrt(n0/2)
std.err1 <- std.drv1 / sqrt(n1/2)
x <- seq(from = mu0 - 5*std.err0, to = mu1 + 5*std.err1, by=0.01)
h0 <- dnorm(x, mean=mu0, sd=std.err0)
h1 <- dnorm(x, mean=mu1, sd=std.err1)
h.norm <- data.frame(x, h0, h1)
a.h0 <- qnorm(a/two.sided, mean=mu0, sd=std.err0, lower.tail=FALSE)
b.h1 <- qnorm(b, mean=mu1, sd=std.err1)
p <- ggplot(h.norm, aes(x=x, y=h0)) +
geom_line(aes(x=x, y=h0), color="red") +
geom_line(aes(x=x, y=h1), color="blue") +
geom_vline(xintercept=a.h0) +
geom_vline(xintercept=b.h1, linetype="dashed") +
geom_ribbon(data=subset(h.norm, a.h0 <= x & x <= max(x)),
aes(ymin=0, ymax=h0, fill="H0", alpha=0.5)) +
geom_ribbon(data=subset(h.norm, min(x) <= x & x <= a.h0),
aes(ymin=0, ymax=h1, fill="H1", alpha=0.5))
print(p)
power.b <- pnorm(qnorm(a/two.sided, lower.tail=FALSE), mean=mu1, sd=std.err1, lower.tail=FALSE)
power.b
power.b <- pnorm(qnorm(a/two.sided, lower.tail=FALSE), mean=mu1, sd=std.err1, lower.tail=TRUE)
power.b
mu1
std.err1
std.err0
qnorm(a/two.sided, lower.tail=FALSE)
power.b <- pnorm(qnorm(a/two.sided, lower.tail=FALSE), mean=mu1, sd=std.err1, lower.tail=TRUE)
qnorm(a/two.sided, mean=mu0, sd=std.err0, lower.tail=FALSE)
norm(qnorm(a/two.sided, mean=mu0, sd=std.err0, lower.tail=FALSE),
mean=mu1, sd=std.err1, lower.tail=FALSE)
pnorm(qnorm(a/two.sided, mean=mu0, sd=std.err0, lower.tail=FALSE),
mean=mu1, sd=std.err1, lower.tail=FALSE)
power.b <- pnorm(qnorm(a/two.sided, mean=mu0, sd=std.err0, lower.tail=FALSE),
mean=mu1, sd=std.err1, lower.tail=FALSE)
if (power.b >= (1-b)){
cat("Power :", power.b, "- adequate\n")
} else{
cat("Power :", power.b, "- inadequate\n")
}
?geom_vline
p <- ggplot(h.norm, aes(x=x, y=h0)) +
geom_line(aes(x=x, y=h0), color="red") +
geom_line(aes(x=x, y=h1), color="blue") +
geom_vline(xintercept=a.h0) +
geom_vline(xintercept=b.h1, linetype="dashed", show.legend=TRUE) +
geom_ribbon(data=subset(h.norm, a.h0 <= x & x <= max(x)),
aes(ymin=0, ymax=h0, fill="H0", alpha=0.5)) +
geom_ribbon(data=subset(h.norm, min(x) <= x & x <= a.h0),
aes(ymin=0, ymax=h1, fill="H1", alpha=0.5))
print(p)
library(ggplot2)
a <- 0.05;  b <- 0.2
effect.size <- 0.5
mu0 <- 0;  std.drv0 <- 1
mu1 <- mu0 + effect.size;  std.drv1 <- 1
one.two <- TRUE
n1 <- 130;  n1.n0 <- 1;
two.sided <- 1;  if(one.two == TRUE) two.sided <- 2
za <- qnorm(a/two.sided, lower.tail=FALSE)
zb <- qnorm(b, lower.tail=FALSE)
q12 <- NULL
if(n1.n0 >= 1){
q12 <- 1 + 1/n1.n0
} else {
q12 <- 1 + n1.n0
}
est.sample.size <- ( (za + zb)^2 * std.drv0^2 * (q12)^2 ) / (effect.size^2)
if(is.na(n1)){
n1 <- est.sample.size
}
n0 <- n1/n1.n0
std.err0 <- std.drv0 / sqrt(n0/2)
std.err1 <- std.drv1 / sqrt(n1/2)
x <- seq(from = mu0 - 5*std.err0, to = mu1 + 5*std.err1, by=0.01)
h0 <- dnorm(x, mean=mu0, sd=std.err0)
h1 <- dnorm(x, mean=mu1, sd=std.err1)
h.norm <- data.frame(x, h0, h1)
a.h0 <- qnorm(a/two.sided, mean=mu0, sd=std.err0, lower.tail=FALSE)
b.h1 <- qnorm(b, mean=mu1, sd=std.err1)
p <- ggplot(h.norm, aes(x=x, y=h0)) +
geom_line(aes(x=x, y=h0), color="red") +
geom_line(aes(x=x, y=h1), color="blue") +
geom_vline(xintercept=a.h0) +
geom_vline(xintercept=b.h1, linetype="dashed", show.legend=TRUE) +
geom_ribbon(data=subset(h.norm, a.h0 <= x & x <= max(x)),
aes(ymin=0, ymax=h0, fill="H0", alpha=0.5)) +
geom_ribbon(data=subset(h.norm, min(x) <= x & x <= a.h0),
aes(ymin=0, ymax=h1, fill="H1", alpha=0.5))
print(p)
power.b <- pnorm(qnorm(a/two.sided, mean=mu0, sd=std.err0, lower.tail=FALSE),
mean=mu1, sd=std.err1, lower.tail=FALSE)
cat("suggested sample size :", est.sample.size, "\n")
if (power.b >= (1-b)){
cat("Power :", power.b, "- adequate\n")
} else{
cat("Power :", power.b, "- inadequate\n")
}
za
zab
zb
std.drv0
q12
effect.size
library(ggplot2)
a <- 0.05;  b <- 0.2
effect.size <- 0.5
mu0 <- 0;  std.drv0 <- 1
mu1 <- mu0 + effect.size;  std.drv1 <- 1
one.two <- TRUE
n1 <- 130;  n1.n0 <- 1;
two.sided <- 1;  if(one.two == TRUE) two.sided <- 2
za <- qnorm(a/two.sided, lower.tail=FALSE)
zb <- qnorm(b, lower.tail=FALSE)
q12 <- NULL
if(n1.n0 >= 1){
q12 <- 1 + 1/n1.n0
} else {
q12 <- 1 + n1.n0
}
est.sample.size <- ( (za + zb)^2 * std.drv0^2 * (q12) ) / (effect.size^2)
if(is.na(n1)){
n1 <- est.sample.size
}
n0 <- n1/n1.n0
std.err0 <- std.drv0 / sqrt(n0/2)
std.err1 <- std.drv1 / sqrt(n1/2)
x <- seq(from = mu0 - 5*std.err0, to = mu1 + 5*std.err1, by=0.01)
h0 <- dnorm(x, mean=mu0, sd=std.err0)
h1 <- dnorm(x, mean=mu1, sd=std.err1)
h.norm <- data.frame(x, h0, h1)
a.h0 <- qnorm(a/two.sided, mean=mu0, sd=std.err0, lower.tail=FALSE)
b.h1 <- qnorm(b, mean=mu1, sd=std.err1)
p <- ggplot(h.norm, aes(x=x, y=h0)) +
geom_line(aes(x=x, y=h0), color="red") +
geom_line(aes(x=x, y=h1), color="blue") +
geom_vline(xintercept=a.h0) +
geom_vline(xintercept=b.h1, linetype="dashed", show.legend=TRUE) +
geom_ribbon(data=subset(h.norm, a.h0 <= x & x <= max(x)),
aes(ymin=0, ymax=h0, fill="H0", alpha=0.5)) +
geom_ribbon(data=subset(h.norm, min(x) <= x & x <= a.h0),
aes(ymin=0, ymax=h1, fill="H1", alpha=0.5))
print(p)
power.b <- pnorm(qnorm(a/two.sided, mean=mu0, sd=std.err0, lower.tail=FALSE),
mean=mu1, sd=std.err1, lower.tail=FALSE)
cat("suggested sample size :", est.sample.size, "\n")
if (power.b >= (1-b)){
cat("Power :", power.b, "- adequate\n")
} else{
cat("Power :", power.b, "- inadequate\n")
}
mu1 <- mu0 + effect.size;  std.drv1 <- 1
one.two <- TRUE
n1 <- 60;  n1.n0 <- 1;
two.sided <- 1;  if(one.two == TRUE) two.sided <- 2
za <- qnorm(a/two.sided, lower.tail=FALSE)
zb <- qnorm(b, lower.tail=FALSE)
q12 <- NULL
if(n1.n0 >= 1){
q12 <- 1 + 1/n1.n0
} else {
q12 <- 1 + n1.n0
}
est.sample.size <- ( (za + zb)^2 * std.drv0^2 * (q12) ) / (effect.size^2)
if(is.na(n1)){
n1 <- est.sample.size
}
n0 <- n1/n1.n0
std.err0 <- std.drv0 / sqrt(n0/2)
std.err1 <- std.drv1 / sqrt(n1/2)
x <- seq(from = mu0 - 5*std.err0, to = mu1 + 5*std.err1, by=0.01)
h0 <- dnorm(x, mean=mu0, sd=std.err0)
h1 <- dnorm(x, mean=mu1, sd=std.err1)
h.norm <- data.frame(x, h0, h1)
a.h0 <- qnorm(a/two.sided, mean=mu0, sd=std.err0, lower.tail=FALSE)
b.h1 <- qnorm(b, mean=mu1, sd=std.err1)
p <- ggplot(h.norm, aes(x=x, y=h0)) +
geom_line(aes(x=x, y=h0), color="red") +
geom_line(aes(x=x, y=h1), color="blue") +
geom_vline(xintercept=a.h0) +
geom_vline(xintercept=b.h1, linetype="dashed", show.legend=TRUE) +
geom_ribbon(data=subset(h.norm, a.h0 <= x & x <= max(x)),
aes(ymin=0, ymax=h0, fill="H0", alpha=0.5)) +
geom_ribbon(data=subset(h.norm, min(x) <= x & x <= a.h0),
aes(ymin=0, ymax=h1, fill="H1", alpha=0.5))
print(p)
power.b <- pnorm(qnorm(a/two.sided, mean=mu0, sd=std.err0, lower.tail=FALSE),
mean=mu1, sd=std.err1, lower.tail=FALSE)
cat("suggested sample size :", est.sample.size, "\n")
if (power.b >= (1-b)){
cat("Power :", power.b, "- adequate\n")
} else{
cat("Power :", power.b, "- inadequate\n")
}
n1 <- 64;  n1.n0 <- 1;
two.sided <- 1;  if(one.two == TRUE) two.sided <- 2
za <- qnorm(a/two.sided, lower.tail=FALSE)
zb <- qnorm(b, lower.tail=FALSE)
q12 <- NULL
if(n1.n0 >= 1){
q12 <- 1 + 1/n1.n0
} else {
q12 <- 1 + n1.n0
}
est.sample.size <- ( (za + zb)^2 * std.drv0^2 * (q12) ) / (effect.size^2)
if(is.na(n1)){
n1 <- est.sample.size
}
n0 <- n1/n1.n0
std.err0 <- std.drv0 / sqrt(n0/2)
std.err1 <- std.drv1 / sqrt(n1/2)
x <- seq(from = mu0 - 5*std.err0, to = mu1 + 5*std.err1, by=0.01)
h0 <- dnorm(x, mean=mu0, sd=std.err0)
h1 <- dnorm(x, mean=mu1, sd=std.err1)
h.norm <- data.frame(x, h0, h1)
a.h0 <- qnorm(a/two.sided, mean=mu0, sd=std.err0, lower.tail=FALSE)
b.h1 <- qnorm(b, mean=mu1, sd=std.err1)
p <- ggplot(h.norm, aes(x=x, y=h0)) +
geom_line(aes(x=x, y=h0), color="red") +
geom_line(aes(x=x, y=h1), color="blue") +
geom_vline(xintercept=a.h0) +
geom_vline(xintercept=b.h1, linetype="dashed", show.legend=TRUE) +
geom_ribbon(data=subset(h.norm, a.h0 <= x & x <= max(x)),
aes(ymin=0, ymax=h0, fill="H0", alpha=0.5)) +
geom_ribbon(data=subset(h.norm, min(x) <= x & x <= a.h0),
aes(ymin=0, ymax=h1, fill="H1", alpha=0.5))
print(p)
power.b <- pnorm(qnorm(a/two.sided, mean=mu0, sd=std.err0, lower.tail=FALSE),
mean=mu1, sd=std.err1, lower.tail=FALSE)
cat("suggested sample size :", est.sample.size, "\n")
if (power.b >= (1-b)){
cat("Power :", power.b, "- adequate\n")
} else{
cat("Power :", power.b, "- inadequate\n")
}
shiny::runApp('DDP')
runApp('DDP')
runApp('DDP')
runApp('DDP')
runApp('DDP')
rm(list=ls())
runApp('DDP')
runApp()
:q2
runApp('DDP')
runApp('DDP')
runApp()
runApp('DDP')
runApp('DDP')
runApp()
runApp('DDP')
runApp()
runApp('DDP')
runApp('DDP')
runApp()
a
library(shiny)
library(ggplot2)
runApp('DDP')
runApp()
runApp('DDP')
